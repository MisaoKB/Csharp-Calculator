<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>